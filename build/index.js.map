{
  "version": 3,
  "file": "index.js",
  "sourceRoot": "../src/",
  "sources": [
    "index.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "'use strict'\r\n\r\nfs = require 'fs-extra'\r\nWavDecoder = require 'wav-decoder'\r\nWavEncoder = require 'wav-encoder'\r\n\r\nmain = ->\r\n  file = await fs.readFile 'wavs/1.wav'\r\n  decoded = await WavDecoder.decode file\r\n  lastSignificant = -1\r\n  start = -1\r\n  await fs.emptyDir 'output'\r\n  outbursts = []\r\n  for channel, c in decoded.channelData\r\n    for sample, i in decoded.channelData[c]\r\n      if Math.abs(sample) > 0.04\r\n        if i - lastSignificant > 4000\r\n          if start isnt - 1\r\n            console.log i - lastSignificant, start, lastSignificant\r\n            length = lastSignificant - start\r\n            if length > 2000\r\n              outbursts.push \r\n                channel: c\r\n                start: (start / 8000).toFixed(4)\r\n                end: ((start + length) / 8000).toFixed(4)\r\n                length: (length / 8000).toFixed(4)\r\n              outArr = new Float32Array(length).map (e, index) ->\r\n                decoded.channelData[c][start + index]\r\n              console.log outArr.length\r\n              buffer = await WavEncoder.encode\r\n                sampleRate: 8000,\r\n                channelData: [ outArr ]\r\n              await fs.writeFile 'output/' + c + '_out_' + i + '.wav', new Buffer(buffer)\r\n          start = i\r\n        lastSignificant = i\r\n  outbursts.sort (a, b) ->\r\n    if a.start > b.start then 1 else -1\r\n  for outburst, i in outbursts\r\n    if i > 0\r\n      outburst.fromLast = (outburst.start - outbursts[i - 1].end).toFixed(4)\r\n  console.log outbursts\r\nmain()"
  ]
}